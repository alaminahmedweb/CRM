@model DraftCustomer
@inject UserManager<ApplicationUser> userManager;

@{
    ViewData["Title"] = "Remove Draft Customer";
    var userid = "";
    if (User.Identity.IsAuthenticated)
    {
       userid  = userManager.GetUserId(User);
    }
}

<h3>Are you sure you want to Remove Draft Customer?</h3>
<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ClientName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ClientName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MobileNo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MobileNo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Remarks)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Remarks)
        </dd>
        <dt class="col-sm-2">
            Followup Date
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NextFollowupDate)
        </dd>
    </dl>

    <form asp-action="Update">
        <input type="hidden" asp-for="ModifiedBy" value="@userid"/>
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Remove" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
